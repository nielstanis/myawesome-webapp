name: .NET

on:

  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Pip Installer
      uses: BSFishy/pip-action@v1
      with:
        packages: in-toto
    - name: Run Workflow
      id: write_file
      uses: timheuer/base64-to-file@v1
      with:
        fileName: 'key'
        encodedString: ${{ secrets.RSA_KEY }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: |
        in-toto-record start --verbose --step publish --materials * --key ${{ steps.write_file.outputs.filePath }}
        dotnet publish -o ./pub
        in-toto-record stop  --verbose --step publish --products pub/* --key ${{ steps.write_file.outputs.filePath }}
    - name: Zip Binaries
      run: zip -r pub.zip pub
    - name: CycloneDX .NET Generate SBOM
      # You may pin to the exact commit or the version.
      # uses: CycloneDX/gh-dotnet-generate-sbom@c183e4ac30e5b99354cb9a98c38548e07c538346
      uses: CycloneDX/gh-dotnet-generate-sbom@v1.0.1
      with:
        path: ./WebApp.csproj
        json: true
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Download the Pipeline Scanner
      uses: wei/curl@master
      with:
        args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - name: Unzip the Pipeline Scanner
      run: unzip pipeline-scan-LATEST.zip
    - name: Run Pipeline Scanner
      run: java -Dpipeline.debug=true -jar pipeline-scan.jar --veracode_api_id "${{secrets.VC_API_ID}}" --veracode_api_key "${{secrets.VC_API_KEY}}" --file "pub.zip" -jf pipeline.json
    - name : Execute
      run: |
        in-toto-run -n sbom -p bom.json -x -k ${{ steps.write_file.outputs.filePath }}
        in-toto-run -n sast -p pipeline.json -x -k ${{ steps.write_file.outputs.filePath }}
    - uses: actions/upload-artifact@v2
      with:
        name: my-sbom
        path: | 
          bom.json
          pipeline.json
          *.link
          pub.zip
